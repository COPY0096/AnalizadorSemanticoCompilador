Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list
Rule 2     stmt_list -> stmt_list stmt
Rule 3     stmt_list -> stmt
Rule 4     stmt -> decl SEMI
Rule 5     stmt -> assign SEMI
Rule 6     decl -> type ID
Rule 7     decl -> type ID ASSIGN expression
Rule 8     assign -> ID ASSIGN expression
Rule 9     type -> INT_KW
Rule 10    type -> FLOAT_KW
Rule 11    expression -> expression PLUS term
Rule 12    expression -> expression MINUS term
Rule 13    expression -> term
Rule 14    term -> term TIMES factor
Rule 15    term -> term DIV factor
Rule 16    term -> factor
Rule 17    factor -> NUM_INT
Rule 18    factor -> NUM_FLOAT
Rule 19    factor -> ID
Rule 20    factor -> LPAREN expression RPAREN

Terminals, with rules where they appear

ASSIGN               : 7 8
DIV                  : 15
FLOAT_KW             : 10
ID                   : 6 7 8 19
INT_KW               : 9
LPAREN               : 20
MINUS                : 12
NUM_FLOAT            : 18
NUM_INT              : 17
PLUS                 : 11
RPAREN               : 20
SEMI                 : 4 5
TIMES                : 14
error                : 

Nonterminals, with rules where they appear

assign               : 5
decl                 : 4
expression           : 7 8 11 12 20
factor               : 14 15 16
program              : 0
stmt                 : 2 3
stmt_list            : 1 2
term                 : 11 12 13 14 15
type                 : 6 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt_list
    (2) stmt_list -> . stmt_list stmt
    (3) stmt_list -> . stmt
    (4) stmt -> . decl SEMI
    (5) stmt -> . assign SEMI
    (6) decl -> . type ID
    (7) decl -> . type ID ASSIGN expression
    (8) assign -> . ID ASSIGN expression
    (9) type -> . INT_KW
    (10) type -> . FLOAT_KW

    ID              shift and go to state 7
    INT_KW          shift and go to state 8
    FLOAT_KW        shift and go to state 9

    program                        shift and go to state 1
    stmt_list                      shift and go to state 2
    stmt                           shift and go to state 3
    decl                           shift and go to state 4
    assign                         shift and go to state 5
    type                           shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> stmt_list .
    (2) stmt_list -> stmt_list . stmt
    (4) stmt -> . decl SEMI
    (5) stmt -> . assign SEMI
    (6) decl -> . type ID
    (7) decl -> . type ID ASSIGN expression
    (8) assign -> . ID ASSIGN expression
    (9) type -> . INT_KW
    (10) type -> . FLOAT_KW

    $end            reduce using rule 1 (program -> stmt_list .)
    ID              shift and go to state 7
    INT_KW          shift and go to state 8
    FLOAT_KW        shift and go to state 9

    stmt                           shift and go to state 10
    decl                           shift and go to state 4
    assign                         shift and go to state 5
    type                           shift and go to state 6

state 3

    (3) stmt_list -> stmt .

    ID              reduce using rule 3 (stmt_list -> stmt .)
    INT_KW          reduce using rule 3 (stmt_list -> stmt .)
    FLOAT_KW        reduce using rule 3 (stmt_list -> stmt .)
    $end            reduce using rule 3 (stmt_list -> stmt .)


state 4

    (4) stmt -> decl . SEMI

    SEMI            shift and go to state 11


state 5

    (5) stmt -> assign . SEMI

    SEMI            shift and go to state 12


state 6

    (6) decl -> type . ID
    (7) decl -> type . ID ASSIGN expression

    ID              shift and go to state 13


state 7

    (8) assign -> ID . ASSIGN expression

    ASSIGN          shift and go to state 14


state 8

    (9) type -> INT_KW .

    ID              reduce using rule 9 (type -> INT_KW .)


state 9

    (10) type -> FLOAT_KW .

    ID              reduce using rule 10 (type -> FLOAT_KW .)


state 10

    (2) stmt_list -> stmt_list stmt .

    ID              reduce using rule 2 (stmt_list -> stmt_list stmt .)
    INT_KW          reduce using rule 2 (stmt_list -> stmt_list stmt .)
    FLOAT_KW        reduce using rule 2 (stmt_list -> stmt_list stmt .)
    $end            reduce using rule 2 (stmt_list -> stmt_list stmt .)


state 11

    (4) stmt -> decl SEMI .

    ID              reduce using rule 4 (stmt -> decl SEMI .)
    INT_KW          reduce using rule 4 (stmt -> decl SEMI .)
    FLOAT_KW        reduce using rule 4 (stmt -> decl SEMI .)
    $end            reduce using rule 4 (stmt -> decl SEMI .)


state 12

    (5) stmt -> assign SEMI .

    ID              reduce using rule 5 (stmt -> assign SEMI .)
    INT_KW          reduce using rule 5 (stmt -> assign SEMI .)
    FLOAT_KW        reduce using rule 5 (stmt -> assign SEMI .)
    $end            reduce using rule 5 (stmt -> assign SEMI .)


state 13

    (6) decl -> type ID .
    (7) decl -> type ID . ASSIGN expression

    SEMI            reduce using rule 6 (decl -> type ID .)
    ASSIGN          shift and go to state 15


state 14

    (8) assign -> ID ASSIGN . expression
    (11) expression -> . expression PLUS term
    (12) expression -> . expression MINUS term
    (13) expression -> . term
    (14) term -> . term TIMES factor
    (15) term -> . term DIV factor
    (16) term -> . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID
    (20) factor -> . LPAREN expression RPAREN

    NUM_INT         shift and go to state 20
    NUM_FLOAT       shift and go to state 21
    ID              shift and go to state 16
    LPAREN          shift and go to state 22

    expression                     shift and go to state 17
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 15

    (7) decl -> type ID ASSIGN . expression
    (11) expression -> . expression PLUS term
    (12) expression -> . expression MINUS term
    (13) expression -> . term
    (14) term -> . term TIMES factor
    (15) term -> . term DIV factor
    (16) term -> . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID
    (20) factor -> . LPAREN expression RPAREN

    NUM_INT         shift and go to state 20
    NUM_FLOAT       shift and go to state 21
    ID              shift and go to state 16
    LPAREN          shift and go to state 22

    expression                     shift and go to state 23
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 16

    (19) factor -> ID .

    TIMES           reduce using rule 19 (factor -> ID .)
    DIV             reduce using rule 19 (factor -> ID .)
    PLUS            reduce using rule 19 (factor -> ID .)
    MINUS           reduce using rule 19 (factor -> ID .)
    SEMI            reduce using rule 19 (factor -> ID .)
    RPAREN          reduce using rule 19 (factor -> ID .)


state 17

    (8) assign -> ID ASSIGN expression .
    (11) expression -> expression . PLUS term
    (12) expression -> expression . MINUS term

    SEMI            reduce using rule 8 (assign -> ID ASSIGN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 18

    (13) expression -> term .
    (14) term -> term . TIMES factor
    (15) term -> term . DIV factor

    PLUS            reduce using rule 13 (expression -> term .)
    MINUS           reduce using rule 13 (expression -> term .)
    SEMI            reduce using rule 13 (expression -> term .)
    RPAREN          reduce using rule 13 (expression -> term .)
    TIMES           shift and go to state 26
    DIV             shift and go to state 27


state 19

    (16) term -> factor .

    TIMES           reduce using rule 16 (term -> factor .)
    DIV             reduce using rule 16 (term -> factor .)
    PLUS            reduce using rule 16 (term -> factor .)
    MINUS           reduce using rule 16 (term -> factor .)
    SEMI            reduce using rule 16 (term -> factor .)
    RPAREN          reduce using rule 16 (term -> factor .)


state 20

    (17) factor -> NUM_INT .

    TIMES           reduce using rule 17 (factor -> NUM_INT .)
    DIV             reduce using rule 17 (factor -> NUM_INT .)
    PLUS            reduce using rule 17 (factor -> NUM_INT .)
    MINUS           reduce using rule 17 (factor -> NUM_INT .)
    SEMI            reduce using rule 17 (factor -> NUM_INT .)
    RPAREN          reduce using rule 17 (factor -> NUM_INT .)


state 21

    (18) factor -> NUM_FLOAT .

    TIMES           reduce using rule 18 (factor -> NUM_FLOAT .)
    DIV             reduce using rule 18 (factor -> NUM_FLOAT .)
    PLUS            reduce using rule 18 (factor -> NUM_FLOAT .)
    MINUS           reduce using rule 18 (factor -> NUM_FLOAT .)
    SEMI            reduce using rule 18 (factor -> NUM_FLOAT .)
    RPAREN          reduce using rule 18 (factor -> NUM_FLOAT .)


state 22

    (20) factor -> LPAREN . expression RPAREN
    (11) expression -> . expression PLUS term
    (12) expression -> . expression MINUS term
    (13) expression -> . term
    (14) term -> . term TIMES factor
    (15) term -> . term DIV factor
    (16) term -> . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID
    (20) factor -> . LPAREN expression RPAREN

    NUM_INT         shift and go to state 20
    NUM_FLOAT       shift and go to state 21
    ID              shift and go to state 16
    LPAREN          shift and go to state 22

    expression                     shift and go to state 28
    term                           shift and go to state 18
    factor                         shift and go to state 19

state 23

    (7) decl -> type ID ASSIGN expression .
    (11) expression -> expression . PLUS term
    (12) expression -> expression . MINUS term

    SEMI            reduce using rule 7 (decl -> type ID ASSIGN expression .)
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 24

    (11) expression -> expression PLUS . term
    (14) term -> . term TIMES factor
    (15) term -> . term DIV factor
    (16) term -> . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID
    (20) factor -> . LPAREN expression RPAREN

    NUM_INT         shift and go to state 20
    NUM_FLOAT       shift and go to state 21
    ID              shift and go to state 16
    LPAREN          shift and go to state 22

    term                           shift and go to state 29
    factor                         shift and go to state 19

state 25

    (12) expression -> expression MINUS . term
    (14) term -> . term TIMES factor
    (15) term -> . term DIV factor
    (16) term -> . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID
    (20) factor -> . LPAREN expression RPAREN

    NUM_INT         shift and go to state 20
    NUM_FLOAT       shift and go to state 21
    ID              shift and go to state 16
    LPAREN          shift and go to state 22

    term                           shift and go to state 30
    factor                         shift and go to state 19

state 26

    (14) term -> term TIMES . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID
    (20) factor -> . LPAREN expression RPAREN

    NUM_INT         shift and go to state 20
    NUM_FLOAT       shift and go to state 21
    ID              shift and go to state 16
    LPAREN          shift and go to state 22

    factor                         shift and go to state 31

state 27

    (15) term -> term DIV . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID
    (20) factor -> . LPAREN expression RPAREN

    NUM_INT         shift and go to state 20
    NUM_FLOAT       shift and go to state 21
    ID              shift and go to state 16
    LPAREN          shift and go to state 22

    factor                         shift and go to state 32

state 28

    (20) factor -> LPAREN expression . RPAREN
    (11) expression -> expression . PLUS term
    (12) expression -> expression . MINUS term

    RPAREN          shift and go to state 33
    PLUS            shift and go to state 24
    MINUS           shift and go to state 25


state 29

    (11) expression -> expression PLUS term .
    (14) term -> term . TIMES factor
    (15) term -> term . DIV factor

    PLUS            reduce using rule 11 (expression -> expression PLUS term .)
    MINUS           reduce using rule 11 (expression -> expression PLUS term .)
    SEMI            reduce using rule 11 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 11 (expression -> expression PLUS term .)
    TIMES           shift and go to state 26
    DIV             shift and go to state 27


state 30

    (12) expression -> expression MINUS term .
    (14) term -> term . TIMES factor
    (15) term -> term . DIV factor

    PLUS            reduce using rule 12 (expression -> expression MINUS term .)
    MINUS           reduce using rule 12 (expression -> expression MINUS term .)
    SEMI            reduce using rule 12 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 12 (expression -> expression MINUS term .)
    TIMES           shift and go to state 26
    DIV             shift and go to state 27


state 31

    (14) term -> term TIMES factor .

    TIMES           reduce using rule 14 (term -> term TIMES factor .)
    DIV             reduce using rule 14 (term -> term TIMES factor .)
    PLUS            reduce using rule 14 (term -> term TIMES factor .)
    MINUS           reduce using rule 14 (term -> term TIMES factor .)
    SEMI            reduce using rule 14 (term -> term TIMES factor .)
    RPAREN          reduce using rule 14 (term -> term TIMES factor .)


state 32

    (15) term -> term DIV factor .

    TIMES           reduce using rule 15 (term -> term DIV factor .)
    DIV             reduce using rule 15 (term -> term DIV factor .)
    PLUS            reduce using rule 15 (term -> term DIV factor .)
    MINUS           reduce using rule 15 (term -> term DIV factor .)
    SEMI            reduce using rule 15 (term -> term DIV factor .)
    RPAREN          reduce using rule 15 (term -> term DIV factor .)


state 33

    (20) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    DIV             reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 20 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 20 (factor -> LPAREN expression RPAREN .)

