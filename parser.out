Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> stmt_list
Rule 2     stmt_list -> stmt_list stmt
Rule 3     stmt_list -> stmt
Rule 4     stmt -> declaration
Rule 5     stmt -> assignment
Rule 6     declaration -> type ID SEMI
Rule 7     declaration -> type ID ASSIGN expression SEMI
Rule 8     assignment -> ID ASSIGN expression SEMI
Rule 9     type -> INT
Rule 10    type -> FLOAT
Rule 11    expression -> expression PLUS term
Rule 12    expression -> expression MINUS term
Rule 13    expression -> term
Rule 14    term -> term MUL factor
Rule 15    term -> term DIV factor
Rule 16    term -> factor
Rule 17    factor -> NUM_INT
Rule 18    factor -> NUM_FLOAT
Rule 19    factor -> ID

Terminals, with rules where they appear

ASSIGN               : 7 8
DIV                  : 15
FLOAT                : 10
ID                   : 6 7 8 19
INT                  : 9
MINUS                : 12
MUL                  : 14
NUM_FLOAT            : 18
NUM_INT              : 17
PLUS                 : 11
SEMI                 : 6 7 8
error                : 

Nonterminals, with rules where they appear

assignment           : 5
declaration          : 4
expression           : 7 8 11 12
factor               : 14 15 16
program              : 0
stmt                 : 2 3
stmt_list            : 1 2
term                 : 11 12 13 14 15
type                 : 6 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . stmt_list
    (2) stmt_list -> . stmt_list stmt
    (3) stmt_list -> . stmt
    (4) stmt -> . declaration
    (5) stmt -> . assignment
    (6) declaration -> . type ID SEMI
    (7) declaration -> . type ID ASSIGN expression SEMI
    (8) assignment -> . ID ASSIGN expression SEMI
    (9) type -> . INT
    (10) type -> . FLOAT

    ID              shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    program                        shift and go to state 1
    stmt_list                      shift and go to state 2
    stmt                           shift and go to state 3
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    type                           shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> stmt_list .
    (2) stmt_list -> stmt_list . stmt
    (4) stmt -> . declaration
    (5) stmt -> . assignment
    (6) declaration -> . type ID SEMI
    (7) declaration -> . type ID ASSIGN expression SEMI
    (8) assignment -> . ID ASSIGN expression SEMI
    (9) type -> . INT
    (10) type -> . FLOAT

    $end            reduce using rule 1 (program -> stmt_list .)
    ID              shift and go to state 7
    INT             shift and go to state 8
    FLOAT           shift and go to state 9

    stmt                           shift and go to state 10
    declaration                    shift and go to state 4
    assignment                     shift and go to state 5
    type                           shift and go to state 6

state 3

    (3) stmt_list -> stmt .

    ID              reduce using rule 3 (stmt_list -> stmt .)
    INT             reduce using rule 3 (stmt_list -> stmt .)
    FLOAT           reduce using rule 3 (stmt_list -> stmt .)
    $end            reduce using rule 3 (stmt_list -> stmt .)


state 4

    (4) stmt -> declaration .

    ID              reduce using rule 4 (stmt -> declaration .)
    INT             reduce using rule 4 (stmt -> declaration .)
    FLOAT           reduce using rule 4 (stmt -> declaration .)
    $end            reduce using rule 4 (stmt -> declaration .)


state 5

    (5) stmt -> assignment .

    ID              reduce using rule 5 (stmt -> assignment .)
    INT             reduce using rule 5 (stmt -> assignment .)
    FLOAT           reduce using rule 5 (stmt -> assignment .)
    $end            reduce using rule 5 (stmt -> assignment .)


state 6

    (6) declaration -> type . ID SEMI
    (7) declaration -> type . ID ASSIGN expression SEMI

    ID              shift and go to state 11


state 7

    (8) assignment -> ID . ASSIGN expression SEMI

    ASSIGN          shift and go to state 12


state 8

    (9) type -> INT .

    ID              reduce using rule 9 (type -> INT .)


state 9

    (10) type -> FLOAT .

    ID              reduce using rule 10 (type -> FLOAT .)


state 10

    (2) stmt_list -> stmt_list stmt .

    ID              reduce using rule 2 (stmt_list -> stmt_list stmt .)
    INT             reduce using rule 2 (stmt_list -> stmt_list stmt .)
    FLOAT           reduce using rule 2 (stmt_list -> stmt_list stmt .)
    $end            reduce using rule 2 (stmt_list -> stmt_list stmt .)


state 11

    (6) declaration -> type ID . SEMI
    (7) declaration -> type ID . ASSIGN expression SEMI

    SEMI            shift and go to state 13
    ASSIGN          shift and go to state 14


state 12

    (8) assignment -> ID ASSIGN . expression SEMI
    (11) expression -> . expression PLUS term
    (12) expression -> . expression MINUS term
    (13) expression -> . term
    (14) term -> . term MUL factor
    (15) term -> . term DIV factor
    (16) term -> . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID

    NUM_INT         shift and go to state 19
    NUM_FLOAT       shift and go to state 20
    ID              shift and go to state 15

    expression                     shift and go to state 16
    term                           shift and go to state 17
    factor                         shift and go to state 18

state 13

    (6) declaration -> type ID SEMI .

    ID              reduce using rule 6 (declaration -> type ID SEMI .)
    INT             reduce using rule 6 (declaration -> type ID SEMI .)
    FLOAT           reduce using rule 6 (declaration -> type ID SEMI .)
    $end            reduce using rule 6 (declaration -> type ID SEMI .)


state 14

    (7) declaration -> type ID ASSIGN . expression SEMI
    (11) expression -> . expression PLUS term
    (12) expression -> . expression MINUS term
    (13) expression -> . term
    (14) term -> . term MUL factor
    (15) term -> . term DIV factor
    (16) term -> . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID

    NUM_INT         shift and go to state 19
    NUM_FLOAT       shift and go to state 20
    ID              shift and go to state 15

    expression                     shift and go to state 21
    term                           shift and go to state 17
    factor                         shift and go to state 18

state 15

    (19) factor -> ID .

    MUL             reduce using rule 19 (factor -> ID .)
    DIV             reduce using rule 19 (factor -> ID .)
    SEMI            reduce using rule 19 (factor -> ID .)
    PLUS            reduce using rule 19 (factor -> ID .)
    MINUS           reduce using rule 19 (factor -> ID .)


state 16

    (8) assignment -> ID ASSIGN expression . SEMI
    (11) expression -> expression . PLUS term
    (12) expression -> expression . MINUS term

    SEMI            shift and go to state 22
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24


state 17

    (13) expression -> term .
    (14) term -> term . MUL factor
    (15) term -> term . DIV factor

    SEMI            reduce using rule 13 (expression -> term .)
    PLUS            reduce using rule 13 (expression -> term .)
    MINUS           reduce using rule 13 (expression -> term .)
    MUL             shift and go to state 25
    DIV             shift and go to state 26


state 18

    (16) term -> factor .

    MUL             reduce using rule 16 (term -> factor .)
    DIV             reduce using rule 16 (term -> factor .)
    SEMI            reduce using rule 16 (term -> factor .)
    PLUS            reduce using rule 16 (term -> factor .)
    MINUS           reduce using rule 16 (term -> factor .)


state 19

    (17) factor -> NUM_INT .

    MUL             reduce using rule 17 (factor -> NUM_INT .)
    DIV             reduce using rule 17 (factor -> NUM_INT .)
    SEMI            reduce using rule 17 (factor -> NUM_INT .)
    PLUS            reduce using rule 17 (factor -> NUM_INT .)
    MINUS           reduce using rule 17 (factor -> NUM_INT .)


state 20

    (18) factor -> NUM_FLOAT .

    MUL             reduce using rule 18 (factor -> NUM_FLOAT .)
    DIV             reduce using rule 18 (factor -> NUM_FLOAT .)
    SEMI            reduce using rule 18 (factor -> NUM_FLOAT .)
    PLUS            reduce using rule 18 (factor -> NUM_FLOAT .)
    MINUS           reduce using rule 18 (factor -> NUM_FLOAT .)


state 21

    (7) declaration -> type ID ASSIGN expression . SEMI
    (11) expression -> expression . PLUS term
    (12) expression -> expression . MINUS term

    SEMI            shift and go to state 27
    PLUS            shift and go to state 23
    MINUS           shift and go to state 24


state 22

    (8) assignment -> ID ASSIGN expression SEMI .

    ID              reduce using rule 8 (assignment -> ID ASSIGN expression SEMI .)
    INT             reduce using rule 8 (assignment -> ID ASSIGN expression SEMI .)
    FLOAT           reduce using rule 8 (assignment -> ID ASSIGN expression SEMI .)
    $end            reduce using rule 8 (assignment -> ID ASSIGN expression SEMI .)


state 23

    (11) expression -> expression PLUS . term
    (14) term -> . term MUL factor
    (15) term -> . term DIV factor
    (16) term -> . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID

    NUM_INT         shift and go to state 19
    NUM_FLOAT       shift and go to state 20
    ID              shift and go to state 15

    term                           shift and go to state 28
    factor                         shift and go to state 18

state 24

    (12) expression -> expression MINUS . term
    (14) term -> . term MUL factor
    (15) term -> . term DIV factor
    (16) term -> . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID

    NUM_INT         shift and go to state 19
    NUM_FLOAT       shift and go to state 20
    ID              shift and go to state 15

    term                           shift and go to state 29
    factor                         shift and go to state 18

state 25

    (14) term -> term MUL . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID

    NUM_INT         shift and go to state 19
    NUM_FLOAT       shift and go to state 20
    ID              shift and go to state 15

    factor                         shift and go to state 30

state 26

    (15) term -> term DIV . factor
    (17) factor -> . NUM_INT
    (18) factor -> . NUM_FLOAT
    (19) factor -> . ID

    NUM_INT         shift and go to state 19
    NUM_FLOAT       shift and go to state 20
    ID              shift and go to state 15

    factor                         shift and go to state 31

state 27

    (7) declaration -> type ID ASSIGN expression SEMI .

    ID              reduce using rule 7 (declaration -> type ID ASSIGN expression SEMI .)
    INT             reduce using rule 7 (declaration -> type ID ASSIGN expression SEMI .)
    FLOAT           reduce using rule 7 (declaration -> type ID ASSIGN expression SEMI .)
    $end            reduce using rule 7 (declaration -> type ID ASSIGN expression SEMI .)


state 28

    (11) expression -> expression PLUS term .
    (14) term -> term . MUL factor
    (15) term -> term . DIV factor

    SEMI            reduce using rule 11 (expression -> expression PLUS term .)
    PLUS            reduce using rule 11 (expression -> expression PLUS term .)
    MINUS           reduce using rule 11 (expression -> expression PLUS term .)
    MUL             shift and go to state 25
    DIV             shift and go to state 26


state 29

    (12) expression -> expression MINUS term .
    (14) term -> term . MUL factor
    (15) term -> term . DIV factor

    SEMI            reduce using rule 12 (expression -> expression MINUS term .)
    PLUS            reduce using rule 12 (expression -> expression MINUS term .)
    MINUS           reduce using rule 12 (expression -> expression MINUS term .)
    MUL             shift and go to state 25
    DIV             shift and go to state 26


state 30

    (14) term -> term MUL factor .

    MUL             reduce using rule 14 (term -> term MUL factor .)
    DIV             reduce using rule 14 (term -> term MUL factor .)
    SEMI            reduce using rule 14 (term -> term MUL factor .)
    PLUS            reduce using rule 14 (term -> term MUL factor .)
    MINUS           reduce using rule 14 (term -> term MUL factor .)


state 31

    (15) term -> term DIV factor .

    MUL             reduce using rule 15 (term -> term DIV factor .)
    DIV             reduce using rule 15 (term -> term DIV factor .)
    SEMI            reduce using rule 15 (term -> term DIV factor .)
    PLUS            reduce using rule 15 (term -> term DIV factor .)
    MINUS           reduce using rule 15 (term -> term DIV factor .)

